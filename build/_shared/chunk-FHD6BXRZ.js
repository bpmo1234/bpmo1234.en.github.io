import{a as E}from"/build/_shared/chunk-QLU6BERC.js";import{f as d}from"/build/_shared/chunk-JEBMXGTI.js";var f=d(E()),O=[0],a="0px",v=new Map,w=r=>{let i=r.root??document,e=v.get(i);e||(e=new Map,v.set(i,e));let u=JSON.stringify([r.rootMargin,r.threshold]),b=e.get(u);if(!b){let o=new Map,c=new IntersectionObserver(s=>{s.forEach(n=>o.get(n.target)?.forEach(t=>setTimeout(()=>{t(n)},0)))},r);b={observer:c,observe(s,n){let t=o.get(s);t||(t=new Set,o.set(s,t),c.observe(s)),t.add(n)},unobserve(s,n){let t=o.get(s);t&&(t.delete(n),t.size||(o.delete(s),c.unobserve(s),o.size||(c.disconnect(),e.delete(u),e.size||v.delete(i))))}},e.set(u,b)}return b};function S(r,{threshold:i=O,root:e,rootMargin:u=a}={}){let[b,o]=(0,f.useState)();return(0,f.useEffect)(()=>{let c=r&&"current"in r?r.current:r;if(!c)return;let s=!0,n=w({root:e&&"current"in e?e.current:e,rootMargin:u,threshold:i}),t=l=>{s&&o(l)};return n.observe(c,t),()=>{s=!1,n.unobserve(c,t)}},[r,e,u,...i]),b}export{S as a};
